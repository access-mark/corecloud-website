// assets/js/crm-pipeline.js

(function(){
  const PASSWORD = '50050058';
  if (prompt('Enter CRM password:') !== PASSWORD) {
    document.body.innerHTML = '<p style="text-align:center;margin-top:4rem;">Access Denied.</p>';
    return;
  }

  // Helper functions
  function csvArrayToObjects(lines, headers) {
    return lines.slice(1).map(r => {
      const cols = r.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/).map(c=>c.replace(/^\"|\"$/g,''));
      return headers.reduce((obj,h,i)=> (obj[h]=cols[i]||'',obj), {});
    });
  }
  function downloadCSV(filename, headers, rows) {
    const csv = [headers, ...rows]
      .map(r=>r.map(f=>`"${(f||'').replace(/"/g,'""')}"`).join(','))
      .join('\r\n');
    const blob = new Blob([csv], { type:'text/csv' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url; a.download = filename; a.click();
    URL.revokeObjectURL(url);
  }

  // CRM Setup
  const contactsKey = 'crmContacts';
  let contacts = JSON.parse(localStorage.getItem(contactsKey)||'[]');
  const crmEl = document.getElementById('crmApp');
  crmEl.innerHTML = `
    <form class="portal-form" id="contactForm">
      <input type="hidden" id="contactIndex" />
      <input type="text" id="firstName" placeholder="First Name" required />
      <input type="text" id="lastName" placeholder="Last Name" required />
      <input type="text" id="company" placeholder="Company" />
      <input type="text" id="position" placeholder="Position" />
      <input type="text" id="industry" placeholder="Industry Focus" />
      <input type="tel" id="mobile" placeholder="Mobile Number" />
      <input type="tel" id="landline" placeholder="Landline Number" />
      <input type="url" id="website" placeholder="Company Website" />
      <input type="email" id="email" placeholder="Email Address" required />
      <button type="submit" class="btn-primary">Save Contact</button>
    </form>
    <input type="file" id="importCsvContacts" accept=".csv" />
    <button id="exportCsvContacts" class="btn-primary">Export Contacts CSV</button>
    <table class="portal-table">
      <thead><tr><th>First</th><th>Last</th><th>Company</th><th>Position</th><th>Industry</th><th>Mobile</th><th>Landline</th><th>Website</th><th>Email</th><th></th></tr></thead>
      <tbody id="contactsList"></tbody>
    </table>`;

  function renderContacts() {
    const list = document.getElementById('contactsList');
    list.innerHTML = contacts.map((c,i)=>`
      <tr>
        <td>${c.firstName}</td><td>${c.lastName}</td><td>${c.company||''}</td>
        <td>${c.position||''}</td><td>${c.industry||''}</td><td>${c.mobile||''}</td>
        <td>${c.landline||''}</td>
        <td>${c.website ? `<a href='${c.website}' target='_blank'>Website</a>` : ''}</td>
        <td>${c.email}</td>
        <td><span data-i="${i}" class="portal-delete">&times;</span></td>
      </tr>`).join('');
  }
  function saveContacts() {
    localStorage.setItem(contactsKey, JSON.stringify(contacts));
    renderContacts();
    document.getElementById('contactForm').reset();
    document.getElementById('contactIndex').value = '';
  }
  document.getElementById('contactForm').addEventListener('submit', e => {
    e.preventDefault();
    const idx = document.getElementById('contactIndex').value;
    const obj = {};
    ['firstName','lastName','company','position','industry','mobile','landline','website','email']
      .forEach(id => obj[id] = document.getElementById(id).value.trim());
    idx === '' ? contacts.push(obj) : contacts[idx] = obj;
    saveContacts();
  });
  document.getElementById('contactsList').addEventListener('click', e => {
    if (!e.target.matches('.portal-delete')) return;
    const i = e.target.dataset.i;
    if (confirm('Delete this contact?')) { contacts.splice(i,1); saveContacts(); }
  });
  document.getElementById('exportCsvContacts').addEventListener('click', () => {
    const hdr = ['firstName','lastName','company','position','industry','mobile','landline','website','email'];
    const rows = contacts.map(c => hdr.map(h => c[h]));
    downloadCSV('contacts.csv', hdr, rows);
  });
  document.getElementById('importCsvContacts').addEventListener('change', e => {
    const f = e.target.files[0]; if (!f) return;
    const r = new FileReader();
    r.onload = ev => {
      const lines = ev.target.result.trim().split(/\r?\n/);
      const headers = lines[0].split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/).map(h => h.replace(/^\"|\"$/g,''));
      csvArrayToObjects(lines, headers).forEach(o => contacts.push(o));
      saveContacts();
      e.target.value = '';
    };
    r.readAsText(f);
  });
  renderContacts();

  // Expose pipeline data for dashboard access
  window.getPipelineData = () => JSON.parse(localStorage.getItem('crmPipeline') || '[]');
})();
